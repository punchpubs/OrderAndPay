//buttons, inputs and checkboxes

button, a.button{
		display:block;
		font-weight: 100;
		background: $teal;;
		border: 1px solid #fff;
		padding: 1rem 1.2rem;
		text-decoration: none;
		box-shadow: 
		8px 8px 20px rgba(0, 0, 0, .2);
		transition: all 0.2s ease-out;
		display: flex;
		align-items: center;
		text-align: center;
		
		 &.cta, .cta {
			padding:3rem ;
			background: $dark-blue;
			font-size: 2.3rem;
			vertical-align: middle;
			margin: 0 auto;
			color: #fff;
			border-radius:.4rem;
			border-radius: 50%;
			height:15rem;
			width:15rem;
			animation: notice-me 3s ease-in-out 40;

				
					
			}
			
		&.addbasket {
			padding: .3rem 2rem;
			color: #fff;
			border: 1px solid darken($teal, 5%);
			
			&:active {
				box-shadow:
				inset 0px 0px 10px rgba(255, 255, 255, .1),
				inset 0px 0px 30px rgba(255, 255, 255, .3);
				}
		}	
		
		
	

		
		button:hover,
		button:focus,
		a.button:hover,
		a.button:focus{ 		
				box-shadow:
				5px 5px 15px rgba(0, 0, 0, .1),
			
				}
		
		button:focus, a.button:focus {
		    outline: none;
		    
			}
		
		button:active, a.button:active {
		box-shadow:
				1px 1px 2px rgba(0, 0, 0, .1),
				0 0 4px lighten($teal, 10%),
				0 0 50px lighten($teal, 50%);
		
		}
			
	
	}
	
// controlls <div> is the top of the page navigaiton area. should hold the 'open nav' control and basket overview  

      
    button.navToggle{
		background: $teal;
		border: none;
		border-radius: 0;
		font-size: 1rem;
		color: #fff;
		box-shadow: 
		0px 8px 20px rgba(0, 0, 0, .2);
		padding: 1rem;
		border: 1px solid lighten($teal, 2%);

		
	    
	    &::after {
		    //content:'\2630';
		    //content:'MENU';
		    }   

	    &:hover {
		    box-shadow: 
			0px 0px 10px rgba(0, 0, 0, .2);

	    }
	    
	    &:active {
		    box-shadow:
		   inset 0px 0px 10px rgba(255, 255, 255, .1),
		   inset 0px 0px 30px rgba(255, 255, 255, .3);


	    }
 
     }


      
    button.navBasket {
		background: $dark-blue;
		border: none;
		border-radius: 0;
		font-size: 1rem;
		color: #fff;
		box-shadow: none;
		//0px 8px 20px rgba(0, 0, 0, .2);
		padding: 1rem;
		margin: 0;
		border: 1px solid darken($dark-blue, 20%);

		
	    
	    &::after {
		    //content:'\2630';
		    //content:'MENU';
		    }   

	    &:hover {
		    background: $copper;
		    box-shadow: 
			0px 0px 10px rgba(0, 0, 0, .1);
			border: 1px solid darken($copper, 5%);


	    }
	    
	    &:active {
		    background: $yellow;
		    border: 1px solid darken($yellow, 5%);

	    }
 
     }	
	
	
	
//inputs and checkboxes. no additional markup required. 


@supports(-webkit-appearance: none) or (-moz-appearance: none) {
  input[type='checkbox'],
  input[type='radio'] {
    --active: #318a8c;
    --active-inner: #fff;
    --focus: 2px rgba(39, 94, 254, .3);
    --border:#318a8c;
    --border-hover: #d46f1d;
    --background: #fff;
    --disabled: #f6F8FF;
    --disabled-inner: #e1E6F9;
    -webkit-appearance: none;
    -moz-appearance: none;
    height: 21px;
    outline: none;
    display: inline-block;
    vertical-align: bottom;
    position: relative;
    margin: 0;
    cursor: pointer;
    border: 1px solid var(--bc, var(--border));
    background: var(--b, var(--background));
    transition: background .3s, border-color .3s, box-shadow .2s;
    &:after {
      content: '';
      display: block;
      left: 0;
      top: 0;
      position: absolute;
      transition: transform var(--d-t, .3s) var(--d-t-e, ease), opacity var(--d-o, .2s);
    }
    &:checked {
      --b: var(--active);
      --bc: var(--active);
      --d-o: .3s;
      --d-t: .6s;
      --d-t-e: cubic-bezier(.2, .85, .32, 1.2);
    }
    &:disabled {
      --b: var(--disabled);
      cursor: not-allowed;
      opacity: .9;
      &:checked {
        --b: var(--disabled-inner);
        --bc: var(--border);
      }
      & + label {
        cursor: not-allowed;
      }
    }
    &:hover {
      &:not(:checked) {
        &:not(:disabled) {
          --bc: var(--border-hover);
        }
      }
    }
    &:focus {
      box-shadow: 0 0 0 var(--focus);
    }
    &:not(.switch) {
      width: 21px;
      &:after {
        opacity: var(--o, 0);
      }
      &:checked {
        --o: 1;
      }
    }
    & + label {
      font-size: 1rem;
      line-height: 1.1rem;
      display: inline-block;
      vertical-align: top;
      cursor: pointer;
      margin-left: .3rem;
    }
  }
  input[type='checkbox'] {
    &:not(.switch) {
      border-radius: 7px;
      &:after {
        width: 5px;
        height: 9px;
        border: 2px solid var(--active-inner);
        border-top: 0;
        border-left: 0;
        left: 7px;
        top: 4px;
        transform: rotate(var(--r, 20deg));
      }
      &:checked {
        --r: 43deg;
      }
    }
    &.switch {
      width: 38px;
      border-radius: 11px;
      &:after {
        left: 2px;
        top: 2px;
        border-radius: 50%;
        width: 15px;
        height: 15px;
        background: var(--ab, var(--border));
        transform: translateX(var(--x, 0));
      }
      &:checked {
        --ab: var(--active-inner);
        --x: 17px;
      }
      &:disabled {
        &:not(:checked) {
          &:after {
            opacity: .6;
          }
        }
      }
    }
  }
  input[type='radio'] {
    border-radius: 50%;
    &:after {
      width: 19px;
      height: 19px;
      border-radius: 50%;
      background: var(--active-inner);
      opacity: 0;
      transform: scale(var(--s, .7));
    }
    &:checked {
      --s: .5;
    }
  }
}